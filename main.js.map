{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/guard.guard.ts","./src/app/inicio/inicio.component.ts","./src/app/inicio/inicio.component.html","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/models/Produto.model.ts","./src/app/produto.service.ts","./src/app/restrito/atualiza-produto/atualiza-produto.component.ts","./src/app/restrito/atualiza-produto/atualiza-produto.component.html","./src/app/restrito/cadastro-produto/cadastro-produto.component.ts","./src/app/restrito/cadastro-produto/cadastro-produto.component.html","./src/app/restrito/lista-produto/lista-produto.component.ts","./src/app/restrito/lista-produto/lista-produto.component.html","./src/app/restrito/menu-restrito/menu-restrito.component.ts","./src/app/restrito/menu-restrito/menu-restrito.component.html","./src/app/restrito/restrito-routing.module.ts","./src/app/restrito/restrito.component.ts","./src/app/restrito/restrito.component.html","./src/app/rodape/rodape.component.ts","./src/app/rodape/rodape.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RestritoComponent } from './restrito/restrito.component';\r\nimport { GuardGuard } from './guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {path:'inicio', component: InicioComponent},\r\n  {path:'login', component: LoginComponent},\r\n  {path:'restrito', component: RestritoComponent, canActivate: [GuardGuard]},\r\n  {path:'', redirectTo:'/inicio',pathMatch:'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<app-menu *ngIf=\"mostrarMenu\"></app-menu>\r\n<router-outlet></router-outlet>\r\n<app-rodape></app-rodape>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit,OnDestroy{\r\n  title = 'LH Games';\r\n  mostrarMenu:boolean = true;\r\n\r\n  constructor(private _loginService: LoginService){}\r\n\r\n  ngOnInit(): void {\r\n    this._loginService.getMostraMenu().subscribe(\r\n      res => { this.mostrarMenu = res; }\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    localStorage.clear();\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n/*Importações Angular Material*/\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { RestritoRoutingModule } from './restrito/restrito-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { RodapeComponent } from './rodape/rodape.component';\r\nimport { RestritoComponent } from './restrito/restrito.component';\r\nimport { AtualizaProdutoComponent } from './restrito/atualiza-produto/atualiza-produto.component';\r\nimport { CadastroProdutoComponent } from './restrito/cadastro-produto/cadastro-produto.component';\r\nimport { ListaProdutoComponent } from './restrito/lista-produto/lista-produto.component';\r\nimport { MenuRestritoComponent } from './restrito/menu-restrito/menu-restrito.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InicioComponent,\r\n    LoginComponent,\r\n    MenuComponent,\r\n    RodapeComponent,\r\n    RestritoComponent,\r\n    AtualizaProdutoComponent,\r\n    CadastroProdutoComponent,\r\n    ListaProdutoComponent,\r\n    MenuRestritoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RestritoRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardGuard implements CanActivate {\n\n  constructor(private _router: Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      if(localStorage.getItem('token') !== null){\n        return true;\n      }\n    \n      this._router.navigate(['login']);\n      return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Produto } from '../models/Produto.model';\r\nimport { ProdutoService } from '../produto.service';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css']\r\n})\r\nexport class InicioComponent implements OnInit{\r\n\r\n  public produtos: Produto[] = [];\r\n\r\n  constructor(private _produtoService:ProdutoService){}\r\n\r\n  ngOnInit(): void {\r\n    this.listarProdutos();\r\n  }\r\n\r\n  listarProdutos():void{\r\n    this._produtoService.getProdutos().subscribe(\r\n      retornaProduto =>{\r\n        this.produtos = retornaProduto.map(\r\n          item => {\r\n            return new Produto(\r\n              item.id,\r\n              item.produto,\r\n              item.descricao,\r\n              item.foto,\r\n              item.preco\r\n            );\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<main>\r\n\r\n    <section id=\"section-banner\">\r\n        <div id=\"carouselExampleAutoplaying\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n            <div class=\"carousel-inner\">\r\n                <div class=\"carousel-item active\">\r\n                    <img src=\"./assets/img/banner1.PNG\" class=\"d-block w-100\" alt=\"Promoção de um jogo\">\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    <img src=\"./assets/img/banner2.PNG\" class=\"d-block w-100\" alt=\"Promoção do mês\">\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    <img src=\"./assets/img/banner3.PNG\" class=\"d-block w-100\" alt=\"Jogo do ano\">\r\n                </div>\r\n            </div>\r\n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleAutoplaying\"\r\n                data-bs-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"visually-hidden\">Previous</span>\r\n            </button>\r\n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleAutoplaying\"\r\n                data-bs-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"visually-hidden\">Next</span>\r\n            </button>\r\n        </div>\r\n    </section>\r\n\r\n    <h2>Jogos em Promoção</h2>\r\n    <mat-grid-list cols=\"3\">\r\n        <mat-grid-tile *ngFor=\"let produto of produtos\">\r\n            <mat-card class=\"example-card\">\r\n                <img mat-card-image src=\"./assets/img/{{produto.foto}}\" alt=\"Jogo 1\">\r\n        \r\n                <mat-card-header>\r\n                  <mat-card-title>{{produto.produto}}</mat-card-title>\r\n                </mat-card-header>\r\n                \r\n                <mat-card-content>\r\n                  <p>\r\n                    {{produto.descricao}}\r\n                  </p>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                  <p>{{produto.preco | currency : 'BRL'}}</p>\r\n                  <button mat-button>Comprar</button>\r\n                </mat-card-actions>\r\n              </mat-card>\r\n        </mat-grid-tile>\r\n        \r\n      </mat-grid-list>\r\n    \r\n</main>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  mostraMenu = new Subject<boolean>();\n\n  constructor() { }\n\n  login(usuario:string, senha:string):void{\n    if(usuario==\"aluno\" && senha == \"1234\"){\n      localStorage.setItem('token','qwer1234');\n      this.mostraMenu.next(false);\n    }else{\n      this.mostraMenu.next(true);\n      window.location.reload();\n    }\n  }\n\n  setMostraMenu(valor: boolean){\n    this.mostraMenu.next(valor);\n  }\n\n  getMostraMenu(){\n    return this.mostraMenu.asObservable();\n  }\n\n}\n","import { Component } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  usuario!: string;\r\n  senha!: string;\r\n\r\n  constructor(private _loginService: LoginService,private _router:Router){}\r\n\r\n  fazerLogin(){\r\n    this._loginService.login(this.usuario,this.senha);\r\n    this._router.navigate(['/restrito/lista']);\r\n    this._loginService.setMostraMenu(false);\r\n  }\r\n}\r\n","<main>\r\n    <section id=\"section-login\">\r\n        <h2>Login</h2>\r\n        <form class=\"row g-3\">\r\n            \r\n              <label for=\"staticUsuario\" class=\"visually-hidden\">Usuário</label>\r\n              <input type=\"text\" name=\"usuario\" [(ngModel)]=\"usuario\" class=\"form-control\" id=\"staticUsuario\" placeholder=\"email@exemplo.com\">\r\n            \r\n            <br>\r\n            \r\n              <label for=\"inputPassword2\" class=\"visually-hidden\">Senha</label>\r\n              <input type=\"password\" name=\"senha\" [(ngModel)]=\"senha\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"senha\">\r\n              <br>\r\n              <button type=\"submit\" class=\"btn btn-primary mb-3\" (click)=\"fazerLogin()\">Login</button>\r\n          \r\n          </form>\r\n    </section>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent {\r\n    \r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <span><a routerLink=\"inicio\"><img src=\"./assets/img/logo.png\"></a></span>\r\n    <span><a routerLink=\"inicio\">Produtos</a></span>\r\n    <span class=\"example-spacer\"></span>\r\n    <span><a routerLink=\"login\">Login</a></span>\r\n</mat-toolbar>","export class Produto{\r\n    id: number = 0;\r\n    produto: string = \"\";\r\n    descricao: string = \"\";\r\n    foto: string = \"\";\r\n    preco: number = 0;\r\n\r\n    constructor(id: number, produto: string, descricao: string, foto:string, preco: number){\r\n        this.id = id;\r\n        this.produto = produto;\r\n        this.descricao = descricao;\r\n        this.foto = foto;\r\n        this.preco =preco;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Produto } from './models/Produto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProdutoService {\n\n  private url = \"http://localhost:3000/produtos\";\n  \n  constructor(private _httpClient: HttpClient) { }\n\n  getProduto(id:any): Observable<Produto> {\n    const urlAtualizar = `${this.url}?id=${id}`;\n    return this._httpClient.get<Produto>(urlAtualizar);\n  }\n\n  getProdutos(): Observable<Produto[]> {\n    return this._httpClient.get<Produto[]>(this.url);\n  }\n\n  cadastrarProduto(produto: Produto): Observable<Produto[]> {\n    return this._httpClient.post<Produto[]>(this.url, produto);\n  }\n\n  atualizarProduto(id: any, produto: Produto): Observable<Produto[]> {\n    const urlAtualizar = `${this.url}/${id}`;\n    return this._httpClient.put<Produto[]>(urlAtualizar, produto);\n  }\n  removerProduto(id: any): Observable<Produto[]> {\n    const urlDeletar = `${this.url}/${id}`;\n    return this._httpClient.delete<Produto[]>(urlDeletar);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Produto } from 'src/app/models/Produto.model';\nimport { ProdutoService } from 'src/app/produto.service';\n\n@Component({\n  selector: 'app-atualiza-produto',\n  templateUrl: './atualiza-produto.component.html',\n  styleUrls: ['./atualiza-produto.component.css']\n})\nexport class AtualizaProdutoComponent implements OnInit{\n\n  public produtoId: number = 0;\n  public produto: Produto = new Produto(0,\"\",\"\",\"\",0);\n\n  constructor(private _produtoService:ProdutoService, private _router: Router,\n    private _activatedRoute:ActivatedRoute){\n      this._activatedRoute.params.subscribe(params => this.produtoId = params['id']);\n    }\n\n    ngOnInit(): void {\n      this.listarProduto();\n    }\n\n    listarProduto():void{\n      this._produtoService.getProduto(this.produtoId).subscribe(\n        (res: any) => {\n          this.produto = new Produto(\n            res[0].id,\n            res[0].produto,\n            res[0].descricao,\n            res[0].foto,\n            res[0].preco\n          );\n        }\n      )\n    }\n\n    atualizar(id: number){\n      this._produtoService.atualizarProduto(id,this.produto).subscribe(\n        produto => {this.produto = new Produto(0,\"\",\"\",\"\",0)},\n        err => {alert(\"Erro ao atualizar\")}\n      );\n\n      this._router.navigate([\"restrito/lista\"]);\n    }\n  \n}\n","<main>\n   \n   <h1>Atualiza jogo</h1>\n   <section id=\"section-cadastro\">\n      <form *ngIf=\"produto\">\n\n         <label for=\"produto\">Id</label>\n         <input type=\"text\" class=\"form-control\" name=\"id\" [(ngModel)]=\"produto.id\" readonly>\n\n         <br>\n\n         <label for=\"produto\">Nome do Produto</label>\n         <input type=\"text\" class=\"form-control\" name=\"produto\" [(ngModel)]=\"produto.produto\">\n\n         <br>\n\n         <label for=\"descricao\">Descrição</label>\n         <input type=\"text\" class=\"form-control\" name=\"descricao\" [(ngModel)]=\"produto.descricao\">\n\n         <br>\n\n         <label for=\"foto\">Foto</label>\n         <input type=\"text\" class=\"form-control\" name=\"foto\" [(ngModel)]=\"produto.foto\">\n\n         <br>\n         \n         <label for=\"preco\">Preço</label>\n         <input type=\"number\" class=\"form-control\" name=\"preco\" [(ngModel)]=\"produto.preco\">\n\n         <br>\n         \n         <button type=\"submit\" class=\"btn btn-primary mb-3\" (click)=\"atualizar(produto.id)\">Atualizar</button>\n     \n      </form>\n   </section>\n</main>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Produto } from 'src/app/models/Produto.model';\nimport { ProdutoService } from 'src/app/produto.service';\n\n@Component({\n  selector: 'app-cadastro-produto',\n  templateUrl: './cadastro-produto.component.html',\n  styleUrls: ['./cadastro-produto.component.css']\n})\nexport class CadastroProdutoComponent {\n\n  public produto: Produto = new Produto(0,\"\",\"\",\"\",0);\n\n  constructor(private _produtoService:ProdutoService, private _router: Router){}\n\n  cadastrar():void{\n    this._produtoService.cadastrarProduto(this.produto).subscribe(\n      produto => {\n        this.produto = new Produto(0,\"\",\"\",\"\",0);\n        alert(\"Cadastro Efetuado com sucesso\");\n      },\n      err => {\n        alert(\"Erro ao Cadastrar\");\n      }\n    );\n\n    this._router.navigate([\"restrito/lista\"]);\n  }\n\n  \n}\n","<main>\n    <h1>Cadastrar jogo</h1>\n    <section id=\"section-cadastro\">\n        <form>\n            \n            <label for=\"produto\">Nome do Produto</label>\n            <input type=\"text\" class=\"form-control\" name=\"produto\" [(ngModel)]=\"produto.produto\">\n\n            <br>\n\n            <label for=\"descricao\">Descrição</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" [(ngModel)]=\"produto.descricao\">\n\n            <br>\n\n            <label for=\"foto\">Foto</label>\n            <input type=\"text\" class=\"form-control\" name=\"foto\" [(ngModel)]=\"produto.foto\">\n\n            <br>\n\n            <label for=\"preco\">Preço</label>\n            <input type=\"number\" class=\"form-control\" name=\"preco\" [(ngModel)]=\"produto.preco\">\n\n            <br>\n\n            <button type=\"button\" class=\"btn btn-primary mb-3\" (click)=\"cadastrar()\">Cadastrar</button>\n\n        </form>\n    </section>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/login.service';\nimport { Produto } from 'src/app/models/Produto.model';\nimport { ProdutoService } from 'src/app/produto.service';\n\n@Component({\n  selector: 'app-lista-produto',\n  templateUrl: './lista-produto.component.html',\n  styleUrls: ['./lista-produto.component.css']\n})\nexport class ListaProdutoComponent implements OnInit{\n\n  public produtos: Produto[] = [];\n\n  constructor(private _produtoService:ProdutoService, private _router: Router,\n    private _loginService:LoginService){}\n\n  ngOnInit(): void {\n    this.listarProdutos();\n    this._loginService.setMostraMenu(false);\n  }\n\n  listarProdutos():void{\n    this._produtoService.getProdutos().subscribe(\n      retornaProduto =>{\n        this.produtos = retornaProduto.map(\n          item => {\n            return new Produto(\n              item.id,\n              item.produto,\n              item.descricao,\n              item.foto,\n              item.preco\n            );\n          }\n        )\n      }\n    )\n  }\n\n  excluir(id: number){\n    this._produtoService.removerProduto(id).subscribe(\n      produto => {\n        this.listarProdutos();\n      },\n      err => {alert(\"Erro ao Excluir\")}\n    );\n\n      this._router.navigate([\"/restrito/lista\"]);\n\n  }\n\n}\n","<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Produto</th>\n            <th scope=\"col\">Descrição</th>\n            <th scope=\"col\">Foto</th>\n            <th scope=\"col\">Preço</th>\n            <th scope=\"col\">Editar</th>\n            <th scope=\"col\">Excluir</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let p of produtos\">\n            <th scope=\"row\">{{p.id}}</th>\n            <td>{{p.produto}}</td>\n            <td>{{p.descricao}}</td>\n            <td><img mat-card-image src=\"./assets/img/{{p.foto}}\" alt=\"produto\"></td>\n            <td>{{p.preco | currency: 'BRL'}}</td>\n            <td><a class=\"btn btn-primary\" routerLink=\"/restrito/editar/{{p.id}}\" role=\"button\">Editar</a></td>\n            <td><a class=\"btn btn-danger\" role=\"button\" (click)=\"excluir(p.id)\">Excluir</a></td>\n        </tr>\n    </tbody>\n</table>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/login.service';\n\n@Component({\n  selector: 'app-menu-restrito',\n  templateUrl: './menu-restrito.component.html',\n  styleUrls: ['./menu-restrito.component.css']\n})\nexport class MenuRestritoComponent {\n\n  constructor( private _router: Router,private _loginService:LoginService){}  \n\n  logout(){\n    localStorage.clear();\n    this._loginService.setMostraMenu(true);\n    this._router.navigate(['/login']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span><a routerLink=\"/restrito/lista\">Listar Produtos</a></span>\n        <span><a routerLink=\"/restrito/cadastro\">Cadastrar Produto</a></span>\n        <span class=\"example-spacer\"></span>\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\"(click)=\"logout()\">\n            <span class=\"material-icons\">logout</span>\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CadastroProdutoComponent } from './cadastro-produto/cadastro-produto.component';\r\nimport { ListaProdutoComponent } from './lista-produto/lista-produto.component';\r\nimport { AtualizaProdutoComponent } from './atualiza-produto/atualiza-produto.component';\r\nimport { RestritoComponent } from './restrito.component';\r\nimport { GuardGuard } from '../guard.guard';\r\n\r\nconst restritoRoutes: Routes = [\r\n    {\r\n        path: 'restrito', component: RestritoComponent, children: [\r\n            { path: 'cadastro', component: CadastroProdutoComponent, canActivate: [GuardGuard] },\r\n            { path: 'lista', component: ListaProdutoComponent, canActivate: [GuardGuard] },\r\n            { path: 'editar/:id', component: AtualizaProdutoComponent, canActivate: [GuardGuard] }\r\n        ]\r\n    },\r\n\r\n    { path: '', redirectTo: '/restrito/lista', pathMatch: 'full' }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(restritoRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RestritoRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-restrito',\n  templateUrl: './restrito.component.html',\n  styleUrls: ['./restrito.component.css']\n})\nexport class RestritoComponent {\n\n}\n","<app-menu-restrito></app-menu-restrito>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rodape',\r\n  templateUrl: './rodape.component.html',\r\n  styleUrls: ['./rodape.component.css']\r\n})\r\nexport class RodapeComponent {\r\n\r\n}\r\n","<footer>\r\n    <p>Desenvolvido por Evandro Brandão</p>\r\n</footer>\r\n\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","InicioComponent","LoginComponent","RestritoComponent","GuardGuard","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","_loginService","ngOnInit","getMostraMenu","subscribe","res","mostrarMenu","ngOnDestroy","localStorage","clear","selectors","decls","vars","consts","template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","MatButtonModule","MatCardModule","MatFormFieldModule","MatGridListModule","MatIconModule","MatInputModule","MatMenuModule","MatToolbarModule","RestritoRoutingModule","BrowserAnimationsModule","MenuComponent","RodapeComponent","AtualizaProdutoComponent","CadastroProdutoComponent","ListaProdutoComponent","MenuRestritoComponent","AppModule","bootstrap","declarations","_router","route","state","getItem","navigate","factory","providedIn","Produto","_produtoService","listarProdutos","getProdutos","retornaProduto","produtos","map","item","id","produto","descricao","foto","preco","Subject","LoginService","login","usuario","senha","setItem","mostraMenu","next","window","location","reload","setMostraMenu","valor","asObservable","fazerLogin","ctx","ProdutoService","_httpClient","getProduto","urlAtualizar","url","get","cadastrarProduto","post","atualizarProduto","put","removerProduto","urlDeletar","delete","_activatedRoute","params","produtoId","listarProduto","atualizar","err","alert","cadastrar","excluir","logout","restritoRoutes","children","forChild","__NgCli_bootstrap_1","bootstrapModule","catch","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}